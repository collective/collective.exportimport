<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="collective.exportimport"
      metal:use-macro="context/main_template/macros/master">

<div metal:fill-slot="main">
    <tal:main-macro metal:define-macro="main">

      <h1 class="documentFirstHeading" i18n:translate="">Import Content</h1>
      <dl class="portalMessage warning" role="status">
        <dt>Warning</dt>
        <dd tal:define="path python:'/'.join(context.getPhysicalPath())">
          You are importing contents in this context: <strong>${path}<strong>
        </dd>
      </dl>
      <p class="documentDescription" i18n:translate="">Here you can upload a json-file.</p>

        <form action="." tal:attributes="action request/URL" method="post" enctype="multipart/form-data">
            <div class="form-group">
                <input type="file" name="jsonfile"/><br/>
            </div>

            <p>You can also select a json-file or a directory holding json-files on the server in the following locations:</p>
            <ul>
              <li tal:repeat="path view/import_paths"><code tal:content="path" /></li>
            </ul>

            <tal:block define="server_files view/server_files">
              <p i18n:translate="server_paths_list">Import from a json-file</p>
              <p tal:condition="not:server_files" i18n:translate="">No json-files found.</p>
              <div class="field mb-3" tal:condition="server_files">
                <label for="server_file" i18n:translate="">json-file on server to import:</label>
                <br />
                <select id="server_file" name="server_file">
                  <option selected="" value="" title="" i18n:translate="">Choose one</option>
                  <option tal:repeat="filename server_files" tal:content="filename" tal:attributes="value filename">
                  </option>
                </select>
              </div>
            </tal:block>

            <tal:block define="server_directories view/server_directories">
              <p i18n:translate="server_paths_list">Import from a directory that holds individual json-files per item:</p>
              <p tal:condition="not:server_directories" i18n:translate="">No directories to import from found.</p>
              <div class="field mb-3" tal:condition="server_directories">
                <label for="server_directory" i18n:translate="">Directory on server to import:</label>
                <br />
                <select id="server_directory" name="server_directory">
                  <option selected="" value="" title="" i18n:translate="">Choose one</option>
                  <option tal:repeat="directoryname server_directories" tal:content="directoryname" tal:attributes="value directoryname">
                  </option>
                </select>
              </div>
            </tal:block>

            <div class="field mb-3">
              <label for="include_blobs" i18n:translate="">Handle existing content</label>
              <span class="formHelp" i18n:translate="">
                  How should content be handled that exists with the same id/path?
              </span>
              <div class="widget">
                <select name="handle_existing_content" class="">
                  <option value="0"
                          tal:repeat="current python:view.handle_existing_content_options"
                          tal:attributes="value python: current[0];
                                          selected python:'selected' if int(current[0]) == view.handle_existing_content else False"
                          tal:content="python:current[1]">
                        0
                  </option>
                </select>
              </div>
            </div>

            <div class="field mb-3">
              <label for="commit" i18n:translate="">Do a commit after each number of items</label>
              <div class="widget">
                <input type="text" size="5" name="commit" id="commit" value=""
                       tal:attributes="value python:view.commit">
              </div>
            </div>

            <div class="field">
              <label>
                <input
                    type="checkbox"
                    name="import_to_current_folder:boolean"
                    id="import_to_current_folder"
                    tal:attributes="checked python:'checked' if view.import_to_current_folder else None"
                    />
                <span i18n:translate="">Import all items into the current folder</span>
                <span class="formHelp" i18n:translate="">
                  This will ignore original tree structure and import all items flat.
                </span>
              </label>
              
            </div>

            <div class="field">
              <label>
                <input
                    type="checkbox"
                    name="import_old_revisions:boolean"
                    id="import_old_revisions"
                    tal:attributes="checked python:'checked' if view.import_old_revisions else None"
                    />
                <span i18n:translate="">Import all old revisions</span>
                <span class="formHelp" i18n:translate="">
                  This will import the content-history (versioning) for each item that has revisions. Warning: This can significantly slow down the import!
                </span>
              </label>
            </div>

            <div class="formControls" class="form-group">
                <input type="hidden" name="form.submitted" value="1"/>
                <button class="btn btn-primary submit-widget button-field context"
                        type="submit" name="submit" value="Import" i18n:attributes="value" i18n:translate="">Import
                </button>
            </div>

        </form>

        <div metal:use-macro="context/@@exportimport_links/links">
          Links to all exports and imports
        </div>

    </tal:main-macro>
</div>

</html>
